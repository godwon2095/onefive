q
@musics
params
q
params
q
params
q
params
q
params[:post][:subtitle].nil?
params[:post][:subtitle]
params
q
params
q
params
q
params[:post][:image]
params[:post]
params
q
length2
legnth2
length
params
q
params
User.all
params
=params
q
Subcomment.last
Subcomment.alst
params
pararms
q
params
q
content.scan(/@\w+/)
c
C
q
content.split[0].gsub!('@','#')
content.split[0]
content.split
content.splite
content
c.gsub!('@', '#')
c
q
content.scan(/@\w+/).replace "ge"
content.scan(/@\w+/).gsub("@", "#")
content.scan(/@\w+/)
User.find_by(name: c.delete('@')).nil?
content
result
params
q
Post.all
@posts
post_ids
q
@posts.map
@posts.all
@posts
@posts.all?
@posts
@posts.all
Post.where(user_id: 1)
Post.all
@posts
@post
q
@posts.to_i
@posts.to_h
@posts
params
q
Song.search("ë°¤")
@musics
q
songs + singers
singers
songs
@musics
params
q
x
Tal.delete_all
tag.users  << tag
user.tags << tag
tag = Tag.first
Tag.new
Tag.all
Tag.create(name: hashtag.downcase.delete('#'))
user.tags
user = User.find_by(name: hashtag.downcase.delete('#'))
user.tags
User.find_by(name: hashtag.downcase.delete('#'))
hashtag.downcase.delete('#')
h = hashtag.downcase.delete('#')
hashtag.downcase.delete('#')
hashtag.downcase
hashtag
hashtags.uniq.map
hashtags.uniq
hashtags
User.find_by(name: "seongwon")
params
q
exit
params
q
format
format.js
params
q
Song.search(params[:search_music])
Song.search(search_music)
params
q
uploader.store!(file)
exit
uploader.store!(file)
uploader
file
uploader.store!(file)
file
file.url
file
uploader
uploader.url
params
c
User.search("kuf").email
User.search("kuf")
User.search("kuf").email
User.search("kuforest97")
User.search("kuf").email
User.search("kuf")
params
c
params
q
continue
result
params
base_url
Wombat.crawl.path
result.path
path
c
params
result
q
bug
@result["music_titles"]
@result
params
exit
params
q!
q1
Comment.find(params[:id])
Comment.find(params[:id)
params
